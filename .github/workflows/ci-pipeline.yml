name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run:  chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.PASSWORD }}
        docker build -t spring-boot .
        docker tag spring-boot alisyabob/spring-boot:${GITHUB_SHA::7}
        docker push alisyabob/spring-boot:${GITHUB_SHA::7}
# 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./springboot-intro-build.zip ./deploy

#    # S3 Bucket으로 copy
#    - name: Deliver to AWS S3
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      run: |
#        aws s3 cp \
#          --region ap-northeast-2 \
#          --acl private \
#          build s3://myBlog